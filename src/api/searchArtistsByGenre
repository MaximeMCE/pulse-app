// /api/searchArtistsByGenre.js
import axios from 'axios';

export const searchArtistsByGenre = async (token, filters) => {
  const { genres, minListeners, maxListeners } = filters;

  if (!genres.length) throw new Error("At least one genre is required");

  const params = new URLSearchParams({
    seed_genres: genres.slice(0, 5).join(','), // max 5
    limit: 30,
    min_popularity: 10,
    target_popularity: 50,
  });

  const response = await axios.get(`https://api.spotify.com/v1/recommendations?${params.toString()}`, {
    headers: { Authorization: `Bearer ${token}` },
  });

  const tracks = response.data.tracks || [];

  // Extract unique artists from recommended tracks
  const artistsMap = new Map();
  for (const track of tracks) {
    const artist = track.artists?.[0];
    if (artist && !artistsMap.has(artist.id)) {
      artistsMap.set(artist.id, {
        id: artist.id,
        name: artist.name,
        listeners: Math.floor(Math.random() * (maxListeners - minListeners + 1)) + minListeners, // Fake for now
        genres: genres,
        preview_url: track.preview_url,
        images: track.album?.images || [],
        releaseDaysAgo: 0, // Placeholder for now
      });
    }
  }

  return Array.from(artistsMap.values());
};
